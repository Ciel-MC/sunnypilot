#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_1443495834072089830) {
   out_1443495834072089830[0] = 0;
   out_1443495834072089830[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_1443495834072089830[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_1443495834072089830[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_1443495834072089830[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_1443495834072089830[5] = -sin(in_vec[1]);
   out_1443495834072089830[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1443495834072089830[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1443495834072089830[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_1443495834072089830[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_1443495834072089830[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_1443495834072089830[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_1443495834072089830[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_1443495834072089830[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_1443495834072089830[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_1443495834072089830[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_1443495834072089830[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_1443495834072089830[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_7269670487349612617) {
   out_7269670487349612617[0] = delta_x[0] + nom_x[0];
   out_7269670487349612617[1] = delta_x[1] + nom_x[1];
   out_7269670487349612617[2] = delta_x[2] + nom_x[2];
   out_7269670487349612617[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_7269670487349612617[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_7269670487349612617[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_7269670487349612617[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_7269670487349612617[7] = delta_x[6] + nom_x[7];
   out_7269670487349612617[8] = delta_x[7] + nom_x[8];
   out_7269670487349612617[9] = delta_x[8] + nom_x[9];
   out_7269670487349612617[10] = delta_x[9] + nom_x[10];
   out_7269670487349612617[11] = delta_x[10] + nom_x[11];
   out_7269670487349612617[12] = delta_x[11] + nom_x[12];
   out_7269670487349612617[13] = delta_x[12] + nom_x[13];
   out_7269670487349612617[14] = delta_x[13] + nom_x[14];
   out_7269670487349612617[15] = delta_x[14] + nom_x[15];
   out_7269670487349612617[16] = delta_x[15] + nom_x[16];
   out_7269670487349612617[17] = delta_x[16] + nom_x[17];
   out_7269670487349612617[18] = delta_x[17] + nom_x[18];
   out_7269670487349612617[19] = delta_x[18] + nom_x[19];
   out_7269670487349612617[20] = delta_x[19] + nom_x[20];
   out_7269670487349612617[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_5168123923996786904) {
   out_5168123923996786904[0] = -nom_x[0] + true_x[0];
   out_5168123923996786904[1] = -nom_x[1] + true_x[1];
   out_5168123923996786904[2] = -nom_x[2] + true_x[2];
   out_5168123923996786904[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_5168123923996786904[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_5168123923996786904[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_5168123923996786904[6] = -nom_x[7] + true_x[7];
   out_5168123923996786904[7] = -nom_x[8] + true_x[8];
   out_5168123923996786904[8] = -nom_x[9] + true_x[9];
   out_5168123923996786904[9] = -nom_x[10] + true_x[10];
   out_5168123923996786904[10] = -nom_x[11] + true_x[11];
   out_5168123923996786904[11] = -nom_x[12] + true_x[12];
   out_5168123923996786904[12] = -nom_x[13] + true_x[13];
   out_5168123923996786904[13] = -nom_x[14] + true_x[14];
   out_5168123923996786904[14] = -nom_x[15] + true_x[15];
   out_5168123923996786904[15] = -nom_x[16] + true_x[16];
   out_5168123923996786904[16] = -nom_x[17] + true_x[17];
   out_5168123923996786904[17] = -nom_x[18] + true_x[18];
   out_5168123923996786904[18] = -nom_x[19] + true_x[19];
   out_5168123923996786904[19] = -nom_x[20] + true_x[20];
   out_5168123923996786904[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_1452774069512641077) {
   out_1452774069512641077[0] = 1.0;
   out_1452774069512641077[1] = 0;
   out_1452774069512641077[2] = 0;
   out_1452774069512641077[3] = 0;
   out_1452774069512641077[4] = 0;
   out_1452774069512641077[5] = 0;
   out_1452774069512641077[6] = 0;
   out_1452774069512641077[7] = 0;
   out_1452774069512641077[8] = 0;
   out_1452774069512641077[9] = 0;
   out_1452774069512641077[10] = 0;
   out_1452774069512641077[11] = 0;
   out_1452774069512641077[12] = 0;
   out_1452774069512641077[13] = 0;
   out_1452774069512641077[14] = 0;
   out_1452774069512641077[15] = 0;
   out_1452774069512641077[16] = 0;
   out_1452774069512641077[17] = 0;
   out_1452774069512641077[18] = 0;
   out_1452774069512641077[19] = 0;
   out_1452774069512641077[20] = 0;
   out_1452774069512641077[21] = 0;
   out_1452774069512641077[22] = 1.0;
   out_1452774069512641077[23] = 0;
   out_1452774069512641077[24] = 0;
   out_1452774069512641077[25] = 0;
   out_1452774069512641077[26] = 0;
   out_1452774069512641077[27] = 0;
   out_1452774069512641077[28] = 0;
   out_1452774069512641077[29] = 0;
   out_1452774069512641077[30] = 0;
   out_1452774069512641077[31] = 0;
   out_1452774069512641077[32] = 0;
   out_1452774069512641077[33] = 0;
   out_1452774069512641077[34] = 0;
   out_1452774069512641077[35] = 0;
   out_1452774069512641077[36] = 0;
   out_1452774069512641077[37] = 0;
   out_1452774069512641077[38] = 0;
   out_1452774069512641077[39] = 0;
   out_1452774069512641077[40] = 0;
   out_1452774069512641077[41] = 0;
   out_1452774069512641077[42] = 0;
   out_1452774069512641077[43] = 0;
   out_1452774069512641077[44] = 1.0;
   out_1452774069512641077[45] = 0;
   out_1452774069512641077[46] = 0;
   out_1452774069512641077[47] = 0;
   out_1452774069512641077[48] = 0;
   out_1452774069512641077[49] = 0;
   out_1452774069512641077[50] = 0;
   out_1452774069512641077[51] = 0;
   out_1452774069512641077[52] = 0;
   out_1452774069512641077[53] = 0;
   out_1452774069512641077[54] = 0;
   out_1452774069512641077[55] = 0;
   out_1452774069512641077[56] = 0;
   out_1452774069512641077[57] = 0;
   out_1452774069512641077[58] = 0;
   out_1452774069512641077[59] = 0;
   out_1452774069512641077[60] = 0;
   out_1452774069512641077[61] = 0;
   out_1452774069512641077[62] = 0;
   out_1452774069512641077[63] = 0;
   out_1452774069512641077[64] = 0;
   out_1452774069512641077[65] = 0;
   out_1452774069512641077[66] = -0.5*state[4];
   out_1452774069512641077[67] = -0.5*state[5];
   out_1452774069512641077[68] = -0.5*state[6];
   out_1452774069512641077[69] = 0;
   out_1452774069512641077[70] = 0;
   out_1452774069512641077[71] = 0;
   out_1452774069512641077[72] = 0;
   out_1452774069512641077[73] = 0;
   out_1452774069512641077[74] = 0;
   out_1452774069512641077[75] = 0;
   out_1452774069512641077[76] = 0;
   out_1452774069512641077[77] = 0;
   out_1452774069512641077[78] = 0;
   out_1452774069512641077[79] = 0;
   out_1452774069512641077[80] = 0;
   out_1452774069512641077[81] = 0;
   out_1452774069512641077[82] = 0;
   out_1452774069512641077[83] = 0;
   out_1452774069512641077[84] = 0;
   out_1452774069512641077[85] = 0;
   out_1452774069512641077[86] = 0;
   out_1452774069512641077[87] = 0.5*state[3];
   out_1452774069512641077[88] = 0.5*state[6];
   out_1452774069512641077[89] = -0.5*state[5];
   out_1452774069512641077[90] = 0;
   out_1452774069512641077[91] = 0;
   out_1452774069512641077[92] = 0;
   out_1452774069512641077[93] = 0;
   out_1452774069512641077[94] = 0;
   out_1452774069512641077[95] = 0;
   out_1452774069512641077[96] = 0;
   out_1452774069512641077[97] = 0;
   out_1452774069512641077[98] = 0;
   out_1452774069512641077[99] = 0;
   out_1452774069512641077[100] = 0;
   out_1452774069512641077[101] = 0;
   out_1452774069512641077[102] = 0;
   out_1452774069512641077[103] = 0;
   out_1452774069512641077[104] = 0;
   out_1452774069512641077[105] = 0;
   out_1452774069512641077[106] = 0;
   out_1452774069512641077[107] = 0;
   out_1452774069512641077[108] = -0.5*state[6];
   out_1452774069512641077[109] = 0.5*state[3];
   out_1452774069512641077[110] = 0.5*state[4];
   out_1452774069512641077[111] = 0;
   out_1452774069512641077[112] = 0;
   out_1452774069512641077[113] = 0;
   out_1452774069512641077[114] = 0;
   out_1452774069512641077[115] = 0;
   out_1452774069512641077[116] = 0;
   out_1452774069512641077[117] = 0;
   out_1452774069512641077[118] = 0;
   out_1452774069512641077[119] = 0;
   out_1452774069512641077[120] = 0;
   out_1452774069512641077[121] = 0;
   out_1452774069512641077[122] = 0;
   out_1452774069512641077[123] = 0;
   out_1452774069512641077[124] = 0;
   out_1452774069512641077[125] = 0;
   out_1452774069512641077[126] = 0;
   out_1452774069512641077[127] = 0;
   out_1452774069512641077[128] = 0;
   out_1452774069512641077[129] = 0.5*state[5];
   out_1452774069512641077[130] = -0.5*state[4];
   out_1452774069512641077[131] = 0.5*state[3];
   out_1452774069512641077[132] = 0;
   out_1452774069512641077[133] = 0;
   out_1452774069512641077[134] = 0;
   out_1452774069512641077[135] = 0;
   out_1452774069512641077[136] = 0;
   out_1452774069512641077[137] = 0;
   out_1452774069512641077[138] = 0;
   out_1452774069512641077[139] = 0;
   out_1452774069512641077[140] = 0;
   out_1452774069512641077[141] = 0;
   out_1452774069512641077[142] = 0;
   out_1452774069512641077[143] = 0;
   out_1452774069512641077[144] = 0;
   out_1452774069512641077[145] = 0;
   out_1452774069512641077[146] = 0;
   out_1452774069512641077[147] = 0;
   out_1452774069512641077[148] = 0;
   out_1452774069512641077[149] = 0;
   out_1452774069512641077[150] = 0;
   out_1452774069512641077[151] = 0;
   out_1452774069512641077[152] = 0;
   out_1452774069512641077[153] = 1.0;
   out_1452774069512641077[154] = 0;
   out_1452774069512641077[155] = 0;
   out_1452774069512641077[156] = 0;
   out_1452774069512641077[157] = 0;
   out_1452774069512641077[158] = 0;
   out_1452774069512641077[159] = 0;
   out_1452774069512641077[160] = 0;
   out_1452774069512641077[161] = 0;
   out_1452774069512641077[162] = 0;
   out_1452774069512641077[163] = 0;
   out_1452774069512641077[164] = 0;
   out_1452774069512641077[165] = 0;
   out_1452774069512641077[166] = 0;
   out_1452774069512641077[167] = 0;
   out_1452774069512641077[168] = 0;
   out_1452774069512641077[169] = 0;
   out_1452774069512641077[170] = 0;
   out_1452774069512641077[171] = 0;
   out_1452774069512641077[172] = 0;
   out_1452774069512641077[173] = 0;
   out_1452774069512641077[174] = 0;
   out_1452774069512641077[175] = 1.0;
   out_1452774069512641077[176] = 0;
   out_1452774069512641077[177] = 0;
   out_1452774069512641077[178] = 0;
   out_1452774069512641077[179] = 0;
   out_1452774069512641077[180] = 0;
   out_1452774069512641077[181] = 0;
   out_1452774069512641077[182] = 0;
   out_1452774069512641077[183] = 0;
   out_1452774069512641077[184] = 0;
   out_1452774069512641077[185] = 0;
   out_1452774069512641077[186] = 0;
   out_1452774069512641077[187] = 0;
   out_1452774069512641077[188] = 0;
   out_1452774069512641077[189] = 0;
   out_1452774069512641077[190] = 0;
   out_1452774069512641077[191] = 0;
   out_1452774069512641077[192] = 0;
   out_1452774069512641077[193] = 0;
   out_1452774069512641077[194] = 0;
   out_1452774069512641077[195] = 0;
   out_1452774069512641077[196] = 0;
   out_1452774069512641077[197] = 1.0;
   out_1452774069512641077[198] = 0;
   out_1452774069512641077[199] = 0;
   out_1452774069512641077[200] = 0;
   out_1452774069512641077[201] = 0;
   out_1452774069512641077[202] = 0;
   out_1452774069512641077[203] = 0;
   out_1452774069512641077[204] = 0;
   out_1452774069512641077[205] = 0;
   out_1452774069512641077[206] = 0;
   out_1452774069512641077[207] = 0;
   out_1452774069512641077[208] = 0;
   out_1452774069512641077[209] = 0;
   out_1452774069512641077[210] = 0;
   out_1452774069512641077[211] = 0;
   out_1452774069512641077[212] = 0;
   out_1452774069512641077[213] = 0;
   out_1452774069512641077[214] = 0;
   out_1452774069512641077[215] = 0;
   out_1452774069512641077[216] = 0;
   out_1452774069512641077[217] = 0;
   out_1452774069512641077[218] = 0;
   out_1452774069512641077[219] = 1.0;
   out_1452774069512641077[220] = 0;
   out_1452774069512641077[221] = 0;
   out_1452774069512641077[222] = 0;
   out_1452774069512641077[223] = 0;
   out_1452774069512641077[224] = 0;
   out_1452774069512641077[225] = 0;
   out_1452774069512641077[226] = 0;
   out_1452774069512641077[227] = 0;
   out_1452774069512641077[228] = 0;
   out_1452774069512641077[229] = 0;
   out_1452774069512641077[230] = 0;
   out_1452774069512641077[231] = 0;
   out_1452774069512641077[232] = 0;
   out_1452774069512641077[233] = 0;
   out_1452774069512641077[234] = 0;
   out_1452774069512641077[235] = 0;
   out_1452774069512641077[236] = 0;
   out_1452774069512641077[237] = 0;
   out_1452774069512641077[238] = 0;
   out_1452774069512641077[239] = 0;
   out_1452774069512641077[240] = 0;
   out_1452774069512641077[241] = 1.0;
   out_1452774069512641077[242] = 0;
   out_1452774069512641077[243] = 0;
   out_1452774069512641077[244] = 0;
   out_1452774069512641077[245] = 0;
   out_1452774069512641077[246] = 0;
   out_1452774069512641077[247] = 0;
   out_1452774069512641077[248] = 0;
   out_1452774069512641077[249] = 0;
   out_1452774069512641077[250] = 0;
   out_1452774069512641077[251] = 0;
   out_1452774069512641077[252] = 0;
   out_1452774069512641077[253] = 0;
   out_1452774069512641077[254] = 0;
   out_1452774069512641077[255] = 0;
   out_1452774069512641077[256] = 0;
   out_1452774069512641077[257] = 0;
   out_1452774069512641077[258] = 0;
   out_1452774069512641077[259] = 0;
   out_1452774069512641077[260] = 0;
   out_1452774069512641077[261] = 0;
   out_1452774069512641077[262] = 0;
   out_1452774069512641077[263] = 1.0;
   out_1452774069512641077[264] = 0;
   out_1452774069512641077[265] = 0;
   out_1452774069512641077[266] = 0;
   out_1452774069512641077[267] = 0;
   out_1452774069512641077[268] = 0;
   out_1452774069512641077[269] = 0;
   out_1452774069512641077[270] = 0;
   out_1452774069512641077[271] = 0;
   out_1452774069512641077[272] = 0;
   out_1452774069512641077[273] = 0;
   out_1452774069512641077[274] = 0;
   out_1452774069512641077[275] = 0;
   out_1452774069512641077[276] = 0;
   out_1452774069512641077[277] = 0;
   out_1452774069512641077[278] = 0;
   out_1452774069512641077[279] = 0;
   out_1452774069512641077[280] = 0;
   out_1452774069512641077[281] = 0;
   out_1452774069512641077[282] = 0;
   out_1452774069512641077[283] = 0;
   out_1452774069512641077[284] = 0;
   out_1452774069512641077[285] = 1.0;
   out_1452774069512641077[286] = 0;
   out_1452774069512641077[287] = 0;
   out_1452774069512641077[288] = 0;
   out_1452774069512641077[289] = 0;
   out_1452774069512641077[290] = 0;
   out_1452774069512641077[291] = 0;
   out_1452774069512641077[292] = 0;
   out_1452774069512641077[293] = 0;
   out_1452774069512641077[294] = 0;
   out_1452774069512641077[295] = 0;
   out_1452774069512641077[296] = 0;
   out_1452774069512641077[297] = 0;
   out_1452774069512641077[298] = 0;
   out_1452774069512641077[299] = 0;
   out_1452774069512641077[300] = 0;
   out_1452774069512641077[301] = 0;
   out_1452774069512641077[302] = 0;
   out_1452774069512641077[303] = 0;
   out_1452774069512641077[304] = 0;
   out_1452774069512641077[305] = 0;
   out_1452774069512641077[306] = 0;
   out_1452774069512641077[307] = 1.0;
   out_1452774069512641077[308] = 0;
   out_1452774069512641077[309] = 0;
   out_1452774069512641077[310] = 0;
   out_1452774069512641077[311] = 0;
   out_1452774069512641077[312] = 0;
   out_1452774069512641077[313] = 0;
   out_1452774069512641077[314] = 0;
   out_1452774069512641077[315] = 0;
   out_1452774069512641077[316] = 0;
   out_1452774069512641077[317] = 0;
   out_1452774069512641077[318] = 0;
   out_1452774069512641077[319] = 0;
   out_1452774069512641077[320] = 0;
   out_1452774069512641077[321] = 0;
   out_1452774069512641077[322] = 0;
   out_1452774069512641077[323] = 0;
   out_1452774069512641077[324] = 0;
   out_1452774069512641077[325] = 0;
   out_1452774069512641077[326] = 0;
   out_1452774069512641077[327] = 0;
   out_1452774069512641077[328] = 0;
   out_1452774069512641077[329] = 1.0;
   out_1452774069512641077[330] = 0;
   out_1452774069512641077[331] = 0;
   out_1452774069512641077[332] = 0;
   out_1452774069512641077[333] = 0;
   out_1452774069512641077[334] = 0;
   out_1452774069512641077[335] = 0;
   out_1452774069512641077[336] = 0;
   out_1452774069512641077[337] = 0;
   out_1452774069512641077[338] = 0;
   out_1452774069512641077[339] = 0;
   out_1452774069512641077[340] = 0;
   out_1452774069512641077[341] = 0;
   out_1452774069512641077[342] = 0;
   out_1452774069512641077[343] = 0;
   out_1452774069512641077[344] = 0;
   out_1452774069512641077[345] = 0;
   out_1452774069512641077[346] = 0;
   out_1452774069512641077[347] = 0;
   out_1452774069512641077[348] = 0;
   out_1452774069512641077[349] = 0;
   out_1452774069512641077[350] = 0;
   out_1452774069512641077[351] = 1.0;
   out_1452774069512641077[352] = 0;
   out_1452774069512641077[353] = 0;
   out_1452774069512641077[354] = 0;
   out_1452774069512641077[355] = 0;
   out_1452774069512641077[356] = 0;
   out_1452774069512641077[357] = 0;
   out_1452774069512641077[358] = 0;
   out_1452774069512641077[359] = 0;
   out_1452774069512641077[360] = 0;
   out_1452774069512641077[361] = 0;
   out_1452774069512641077[362] = 0;
   out_1452774069512641077[363] = 0;
   out_1452774069512641077[364] = 0;
   out_1452774069512641077[365] = 0;
   out_1452774069512641077[366] = 0;
   out_1452774069512641077[367] = 0;
   out_1452774069512641077[368] = 0;
   out_1452774069512641077[369] = 0;
   out_1452774069512641077[370] = 0;
   out_1452774069512641077[371] = 0;
   out_1452774069512641077[372] = 0;
   out_1452774069512641077[373] = 1.0;
   out_1452774069512641077[374] = 0;
   out_1452774069512641077[375] = 0;
   out_1452774069512641077[376] = 0;
   out_1452774069512641077[377] = 0;
   out_1452774069512641077[378] = 0;
   out_1452774069512641077[379] = 0;
   out_1452774069512641077[380] = 0;
   out_1452774069512641077[381] = 0;
   out_1452774069512641077[382] = 0;
   out_1452774069512641077[383] = 0;
   out_1452774069512641077[384] = 0;
   out_1452774069512641077[385] = 0;
   out_1452774069512641077[386] = 0;
   out_1452774069512641077[387] = 0;
   out_1452774069512641077[388] = 0;
   out_1452774069512641077[389] = 0;
   out_1452774069512641077[390] = 0;
   out_1452774069512641077[391] = 0;
   out_1452774069512641077[392] = 0;
   out_1452774069512641077[393] = 0;
   out_1452774069512641077[394] = 0;
   out_1452774069512641077[395] = 1.0;
   out_1452774069512641077[396] = 0;
   out_1452774069512641077[397] = 0;
   out_1452774069512641077[398] = 0;
   out_1452774069512641077[399] = 0;
   out_1452774069512641077[400] = 0;
   out_1452774069512641077[401] = 0;
   out_1452774069512641077[402] = 0;
   out_1452774069512641077[403] = 0;
   out_1452774069512641077[404] = 0;
   out_1452774069512641077[405] = 0;
   out_1452774069512641077[406] = 0;
   out_1452774069512641077[407] = 0;
   out_1452774069512641077[408] = 0;
   out_1452774069512641077[409] = 0;
   out_1452774069512641077[410] = 0;
   out_1452774069512641077[411] = 0;
   out_1452774069512641077[412] = 0;
   out_1452774069512641077[413] = 0;
   out_1452774069512641077[414] = 0;
   out_1452774069512641077[415] = 0;
   out_1452774069512641077[416] = 0;
   out_1452774069512641077[417] = 1.0;
   out_1452774069512641077[418] = 0;
   out_1452774069512641077[419] = 0;
   out_1452774069512641077[420] = 0;
   out_1452774069512641077[421] = 0;
   out_1452774069512641077[422] = 0;
   out_1452774069512641077[423] = 0;
   out_1452774069512641077[424] = 0;
   out_1452774069512641077[425] = 0;
   out_1452774069512641077[426] = 0;
   out_1452774069512641077[427] = 0;
   out_1452774069512641077[428] = 0;
   out_1452774069512641077[429] = 0;
   out_1452774069512641077[430] = 0;
   out_1452774069512641077[431] = 0;
   out_1452774069512641077[432] = 0;
   out_1452774069512641077[433] = 0;
   out_1452774069512641077[434] = 0;
   out_1452774069512641077[435] = 0;
   out_1452774069512641077[436] = 0;
   out_1452774069512641077[437] = 0;
   out_1452774069512641077[438] = 0;
   out_1452774069512641077[439] = 1.0;
   out_1452774069512641077[440] = 0;
   out_1452774069512641077[441] = 0;
   out_1452774069512641077[442] = 0;
   out_1452774069512641077[443] = 0;
   out_1452774069512641077[444] = 0;
   out_1452774069512641077[445] = 0;
   out_1452774069512641077[446] = 0;
   out_1452774069512641077[447] = 0;
   out_1452774069512641077[448] = 0;
   out_1452774069512641077[449] = 0;
   out_1452774069512641077[450] = 0;
   out_1452774069512641077[451] = 0;
   out_1452774069512641077[452] = 0;
   out_1452774069512641077[453] = 0;
   out_1452774069512641077[454] = 0;
   out_1452774069512641077[455] = 0;
   out_1452774069512641077[456] = 0;
   out_1452774069512641077[457] = 0;
   out_1452774069512641077[458] = 0;
   out_1452774069512641077[459] = 0;
   out_1452774069512641077[460] = 0;
   out_1452774069512641077[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_6830993965878836661) {
   out_6830993965878836661[0] = dt*state[7] + state[0];
   out_6830993965878836661[1] = dt*state[8] + state[1];
   out_6830993965878836661[2] = dt*state[9] + state[2];
   out_6830993965878836661[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_6830993965878836661[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_6830993965878836661[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_6830993965878836661[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_6830993965878836661[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_6830993965878836661[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_6830993965878836661[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_6830993965878836661[10] = state[10];
   out_6830993965878836661[11] = state[11];
   out_6830993965878836661[12] = state[12];
   out_6830993965878836661[13] = state[13];
   out_6830993965878836661[14] = state[14];
   out_6830993965878836661[15] = state[15];
   out_6830993965878836661[16] = state[16];
   out_6830993965878836661[17] = state[17];
   out_6830993965878836661[18] = state[18];
   out_6830993965878836661[19] = state[19];
   out_6830993965878836661[20] = state[20];
   out_6830993965878836661[21] = state[21];
}
void F_fun(double *state, double dt, double *out_2745763742263175106) {
   out_2745763742263175106[0] = 1;
   out_2745763742263175106[1] = 0;
   out_2745763742263175106[2] = 0;
   out_2745763742263175106[3] = 0;
   out_2745763742263175106[4] = 0;
   out_2745763742263175106[5] = 0;
   out_2745763742263175106[6] = dt;
   out_2745763742263175106[7] = 0;
   out_2745763742263175106[8] = 0;
   out_2745763742263175106[9] = 0;
   out_2745763742263175106[10] = 0;
   out_2745763742263175106[11] = 0;
   out_2745763742263175106[12] = 0;
   out_2745763742263175106[13] = 0;
   out_2745763742263175106[14] = 0;
   out_2745763742263175106[15] = 0;
   out_2745763742263175106[16] = 0;
   out_2745763742263175106[17] = 0;
   out_2745763742263175106[18] = 0;
   out_2745763742263175106[19] = 0;
   out_2745763742263175106[20] = 0;
   out_2745763742263175106[21] = 0;
   out_2745763742263175106[22] = 1;
   out_2745763742263175106[23] = 0;
   out_2745763742263175106[24] = 0;
   out_2745763742263175106[25] = 0;
   out_2745763742263175106[26] = 0;
   out_2745763742263175106[27] = 0;
   out_2745763742263175106[28] = dt;
   out_2745763742263175106[29] = 0;
   out_2745763742263175106[30] = 0;
   out_2745763742263175106[31] = 0;
   out_2745763742263175106[32] = 0;
   out_2745763742263175106[33] = 0;
   out_2745763742263175106[34] = 0;
   out_2745763742263175106[35] = 0;
   out_2745763742263175106[36] = 0;
   out_2745763742263175106[37] = 0;
   out_2745763742263175106[38] = 0;
   out_2745763742263175106[39] = 0;
   out_2745763742263175106[40] = 0;
   out_2745763742263175106[41] = 0;
   out_2745763742263175106[42] = 0;
   out_2745763742263175106[43] = 0;
   out_2745763742263175106[44] = 1;
   out_2745763742263175106[45] = 0;
   out_2745763742263175106[46] = 0;
   out_2745763742263175106[47] = 0;
   out_2745763742263175106[48] = 0;
   out_2745763742263175106[49] = 0;
   out_2745763742263175106[50] = dt;
   out_2745763742263175106[51] = 0;
   out_2745763742263175106[52] = 0;
   out_2745763742263175106[53] = 0;
   out_2745763742263175106[54] = 0;
   out_2745763742263175106[55] = 0;
   out_2745763742263175106[56] = 0;
   out_2745763742263175106[57] = 0;
   out_2745763742263175106[58] = 0;
   out_2745763742263175106[59] = 0;
   out_2745763742263175106[60] = 0;
   out_2745763742263175106[61] = 0;
   out_2745763742263175106[62] = 0;
   out_2745763742263175106[63] = 0;
   out_2745763742263175106[64] = 0;
   out_2745763742263175106[65] = 0;
   out_2745763742263175106[66] = 1;
   out_2745763742263175106[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2745763742263175106[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_2745763742263175106[69] = 0;
   out_2745763742263175106[70] = 0;
   out_2745763742263175106[71] = 0;
   out_2745763742263175106[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2745763742263175106[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2745763742263175106[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2745763742263175106[75] = 0;
   out_2745763742263175106[76] = 0;
   out_2745763742263175106[77] = 0;
   out_2745763742263175106[78] = 0;
   out_2745763742263175106[79] = 0;
   out_2745763742263175106[80] = 0;
   out_2745763742263175106[81] = 0;
   out_2745763742263175106[82] = 0;
   out_2745763742263175106[83] = 0;
   out_2745763742263175106[84] = 0;
   out_2745763742263175106[85] = 0;
   out_2745763742263175106[86] = 0;
   out_2745763742263175106[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2745763742263175106[88] = 1;
   out_2745763742263175106[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_2745763742263175106[90] = 0;
   out_2745763742263175106[91] = 0;
   out_2745763742263175106[92] = 0;
   out_2745763742263175106[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2745763742263175106[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2745763742263175106[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2745763742263175106[96] = 0;
   out_2745763742263175106[97] = 0;
   out_2745763742263175106[98] = 0;
   out_2745763742263175106[99] = 0;
   out_2745763742263175106[100] = 0;
   out_2745763742263175106[101] = 0;
   out_2745763742263175106[102] = 0;
   out_2745763742263175106[103] = 0;
   out_2745763742263175106[104] = 0;
   out_2745763742263175106[105] = 0;
   out_2745763742263175106[106] = 0;
   out_2745763742263175106[107] = 0;
   out_2745763742263175106[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_2745763742263175106[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_2745763742263175106[110] = 1;
   out_2745763742263175106[111] = 0;
   out_2745763742263175106[112] = 0;
   out_2745763742263175106[113] = 0;
   out_2745763742263175106[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2745763742263175106[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2745763742263175106[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2745763742263175106[117] = 0;
   out_2745763742263175106[118] = 0;
   out_2745763742263175106[119] = 0;
   out_2745763742263175106[120] = 0;
   out_2745763742263175106[121] = 0;
   out_2745763742263175106[122] = 0;
   out_2745763742263175106[123] = 0;
   out_2745763742263175106[124] = 0;
   out_2745763742263175106[125] = 0;
   out_2745763742263175106[126] = 0;
   out_2745763742263175106[127] = 0;
   out_2745763742263175106[128] = 0;
   out_2745763742263175106[129] = 0;
   out_2745763742263175106[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2745763742263175106[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_2745763742263175106[132] = 1;
   out_2745763742263175106[133] = 0;
   out_2745763742263175106[134] = 0;
   out_2745763742263175106[135] = 0;
   out_2745763742263175106[136] = 0;
   out_2745763742263175106[137] = 0;
   out_2745763742263175106[138] = 0;
   out_2745763742263175106[139] = 0;
   out_2745763742263175106[140] = 0;
   out_2745763742263175106[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2745763742263175106[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2745763742263175106[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2745763742263175106[144] = 0;
   out_2745763742263175106[145] = 0;
   out_2745763742263175106[146] = 0;
   out_2745763742263175106[147] = 0;
   out_2745763742263175106[148] = 0;
   out_2745763742263175106[149] = 0;
   out_2745763742263175106[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2745763742263175106[151] = 0;
   out_2745763742263175106[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_2745763742263175106[153] = 0;
   out_2745763742263175106[154] = 1;
   out_2745763742263175106[155] = 0;
   out_2745763742263175106[156] = 0;
   out_2745763742263175106[157] = 0;
   out_2745763742263175106[158] = 0;
   out_2745763742263175106[159] = 0;
   out_2745763742263175106[160] = 0;
   out_2745763742263175106[161] = 0;
   out_2745763742263175106[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2745763742263175106[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2745763742263175106[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2745763742263175106[165] = 0;
   out_2745763742263175106[166] = 0;
   out_2745763742263175106[167] = 0;
   out_2745763742263175106[168] = 0;
   out_2745763742263175106[169] = 0;
   out_2745763742263175106[170] = 0;
   out_2745763742263175106[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_2745763742263175106[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_2745763742263175106[173] = 0;
   out_2745763742263175106[174] = 0;
   out_2745763742263175106[175] = 0;
   out_2745763742263175106[176] = 1;
   out_2745763742263175106[177] = 0;
   out_2745763742263175106[178] = 0;
   out_2745763742263175106[179] = 0;
   out_2745763742263175106[180] = 0;
   out_2745763742263175106[181] = 0;
   out_2745763742263175106[182] = 0;
   out_2745763742263175106[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2745763742263175106[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2745763742263175106[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2745763742263175106[186] = 0;
   out_2745763742263175106[187] = 0;
   out_2745763742263175106[188] = 0;
   out_2745763742263175106[189] = 0;
   out_2745763742263175106[190] = 0;
   out_2745763742263175106[191] = 0;
   out_2745763742263175106[192] = 0;
   out_2745763742263175106[193] = 0;
   out_2745763742263175106[194] = 0;
   out_2745763742263175106[195] = 0;
   out_2745763742263175106[196] = 0;
   out_2745763742263175106[197] = 0;
   out_2745763742263175106[198] = 1;
   out_2745763742263175106[199] = 0;
   out_2745763742263175106[200] = 0;
   out_2745763742263175106[201] = 0;
   out_2745763742263175106[202] = 0;
   out_2745763742263175106[203] = 0;
   out_2745763742263175106[204] = 0;
   out_2745763742263175106[205] = 0;
   out_2745763742263175106[206] = 0;
   out_2745763742263175106[207] = 0;
   out_2745763742263175106[208] = 0;
   out_2745763742263175106[209] = 0;
   out_2745763742263175106[210] = 0;
   out_2745763742263175106[211] = 0;
   out_2745763742263175106[212] = 0;
   out_2745763742263175106[213] = 0;
   out_2745763742263175106[214] = 0;
   out_2745763742263175106[215] = 0;
   out_2745763742263175106[216] = 0;
   out_2745763742263175106[217] = 0;
   out_2745763742263175106[218] = 0;
   out_2745763742263175106[219] = 0;
   out_2745763742263175106[220] = 1;
   out_2745763742263175106[221] = 0;
   out_2745763742263175106[222] = 0;
   out_2745763742263175106[223] = 0;
   out_2745763742263175106[224] = 0;
   out_2745763742263175106[225] = 0;
   out_2745763742263175106[226] = 0;
   out_2745763742263175106[227] = 0;
   out_2745763742263175106[228] = 0;
   out_2745763742263175106[229] = 0;
   out_2745763742263175106[230] = 0;
   out_2745763742263175106[231] = 0;
   out_2745763742263175106[232] = 0;
   out_2745763742263175106[233] = 0;
   out_2745763742263175106[234] = 0;
   out_2745763742263175106[235] = 0;
   out_2745763742263175106[236] = 0;
   out_2745763742263175106[237] = 0;
   out_2745763742263175106[238] = 0;
   out_2745763742263175106[239] = 0;
   out_2745763742263175106[240] = 0;
   out_2745763742263175106[241] = 0;
   out_2745763742263175106[242] = 1;
   out_2745763742263175106[243] = 0;
   out_2745763742263175106[244] = 0;
   out_2745763742263175106[245] = 0;
   out_2745763742263175106[246] = 0;
   out_2745763742263175106[247] = 0;
   out_2745763742263175106[248] = 0;
   out_2745763742263175106[249] = 0;
   out_2745763742263175106[250] = 0;
   out_2745763742263175106[251] = 0;
   out_2745763742263175106[252] = 0;
   out_2745763742263175106[253] = 0;
   out_2745763742263175106[254] = 0;
   out_2745763742263175106[255] = 0;
   out_2745763742263175106[256] = 0;
   out_2745763742263175106[257] = 0;
   out_2745763742263175106[258] = 0;
   out_2745763742263175106[259] = 0;
   out_2745763742263175106[260] = 0;
   out_2745763742263175106[261] = 0;
   out_2745763742263175106[262] = 0;
   out_2745763742263175106[263] = 0;
   out_2745763742263175106[264] = 1;
   out_2745763742263175106[265] = 0;
   out_2745763742263175106[266] = 0;
   out_2745763742263175106[267] = 0;
   out_2745763742263175106[268] = 0;
   out_2745763742263175106[269] = 0;
   out_2745763742263175106[270] = 0;
   out_2745763742263175106[271] = 0;
   out_2745763742263175106[272] = 0;
   out_2745763742263175106[273] = 0;
   out_2745763742263175106[274] = 0;
   out_2745763742263175106[275] = 0;
   out_2745763742263175106[276] = 0;
   out_2745763742263175106[277] = 0;
   out_2745763742263175106[278] = 0;
   out_2745763742263175106[279] = 0;
   out_2745763742263175106[280] = 0;
   out_2745763742263175106[281] = 0;
   out_2745763742263175106[282] = 0;
   out_2745763742263175106[283] = 0;
   out_2745763742263175106[284] = 0;
   out_2745763742263175106[285] = 0;
   out_2745763742263175106[286] = 1;
   out_2745763742263175106[287] = 0;
   out_2745763742263175106[288] = 0;
   out_2745763742263175106[289] = 0;
   out_2745763742263175106[290] = 0;
   out_2745763742263175106[291] = 0;
   out_2745763742263175106[292] = 0;
   out_2745763742263175106[293] = 0;
   out_2745763742263175106[294] = 0;
   out_2745763742263175106[295] = 0;
   out_2745763742263175106[296] = 0;
   out_2745763742263175106[297] = 0;
   out_2745763742263175106[298] = 0;
   out_2745763742263175106[299] = 0;
   out_2745763742263175106[300] = 0;
   out_2745763742263175106[301] = 0;
   out_2745763742263175106[302] = 0;
   out_2745763742263175106[303] = 0;
   out_2745763742263175106[304] = 0;
   out_2745763742263175106[305] = 0;
   out_2745763742263175106[306] = 0;
   out_2745763742263175106[307] = 0;
   out_2745763742263175106[308] = 1;
   out_2745763742263175106[309] = 0;
   out_2745763742263175106[310] = 0;
   out_2745763742263175106[311] = 0;
   out_2745763742263175106[312] = 0;
   out_2745763742263175106[313] = 0;
   out_2745763742263175106[314] = 0;
   out_2745763742263175106[315] = 0;
   out_2745763742263175106[316] = 0;
   out_2745763742263175106[317] = 0;
   out_2745763742263175106[318] = 0;
   out_2745763742263175106[319] = 0;
   out_2745763742263175106[320] = 0;
   out_2745763742263175106[321] = 0;
   out_2745763742263175106[322] = 0;
   out_2745763742263175106[323] = 0;
   out_2745763742263175106[324] = 0;
   out_2745763742263175106[325] = 0;
   out_2745763742263175106[326] = 0;
   out_2745763742263175106[327] = 0;
   out_2745763742263175106[328] = 0;
   out_2745763742263175106[329] = 0;
   out_2745763742263175106[330] = 1;
   out_2745763742263175106[331] = 0;
   out_2745763742263175106[332] = 0;
   out_2745763742263175106[333] = 0;
   out_2745763742263175106[334] = 0;
   out_2745763742263175106[335] = 0;
   out_2745763742263175106[336] = 0;
   out_2745763742263175106[337] = 0;
   out_2745763742263175106[338] = 0;
   out_2745763742263175106[339] = 0;
   out_2745763742263175106[340] = 0;
   out_2745763742263175106[341] = 0;
   out_2745763742263175106[342] = 0;
   out_2745763742263175106[343] = 0;
   out_2745763742263175106[344] = 0;
   out_2745763742263175106[345] = 0;
   out_2745763742263175106[346] = 0;
   out_2745763742263175106[347] = 0;
   out_2745763742263175106[348] = 0;
   out_2745763742263175106[349] = 0;
   out_2745763742263175106[350] = 0;
   out_2745763742263175106[351] = 0;
   out_2745763742263175106[352] = 1;
   out_2745763742263175106[353] = 0;
   out_2745763742263175106[354] = 0;
   out_2745763742263175106[355] = 0;
   out_2745763742263175106[356] = 0;
   out_2745763742263175106[357] = 0;
   out_2745763742263175106[358] = 0;
   out_2745763742263175106[359] = 0;
   out_2745763742263175106[360] = 0;
   out_2745763742263175106[361] = 0;
   out_2745763742263175106[362] = 0;
   out_2745763742263175106[363] = 0;
   out_2745763742263175106[364] = 0;
   out_2745763742263175106[365] = 0;
   out_2745763742263175106[366] = 0;
   out_2745763742263175106[367] = 0;
   out_2745763742263175106[368] = 0;
   out_2745763742263175106[369] = 0;
   out_2745763742263175106[370] = 0;
   out_2745763742263175106[371] = 0;
   out_2745763742263175106[372] = 0;
   out_2745763742263175106[373] = 0;
   out_2745763742263175106[374] = 1;
   out_2745763742263175106[375] = 0;
   out_2745763742263175106[376] = 0;
   out_2745763742263175106[377] = 0;
   out_2745763742263175106[378] = 0;
   out_2745763742263175106[379] = 0;
   out_2745763742263175106[380] = 0;
   out_2745763742263175106[381] = 0;
   out_2745763742263175106[382] = 0;
   out_2745763742263175106[383] = 0;
   out_2745763742263175106[384] = 0;
   out_2745763742263175106[385] = 0;
   out_2745763742263175106[386] = 0;
   out_2745763742263175106[387] = 0;
   out_2745763742263175106[388] = 0;
   out_2745763742263175106[389] = 0;
   out_2745763742263175106[390] = 0;
   out_2745763742263175106[391] = 0;
   out_2745763742263175106[392] = 0;
   out_2745763742263175106[393] = 0;
   out_2745763742263175106[394] = 0;
   out_2745763742263175106[395] = 0;
   out_2745763742263175106[396] = 1;
   out_2745763742263175106[397] = 0;
   out_2745763742263175106[398] = 0;
   out_2745763742263175106[399] = 0;
   out_2745763742263175106[400] = 0;
   out_2745763742263175106[401] = 0;
   out_2745763742263175106[402] = 0;
   out_2745763742263175106[403] = 0;
   out_2745763742263175106[404] = 0;
   out_2745763742263175106[405] = 0;
   out_2745763742263175106[406] = 0;
   out_2745763742263175106[407] = 0;
   out_2745763742263175106[408] = 0;
   out_2745763742263175106[409] = 0;
   out_2745763742263175106[410] = 0;
   out_2745763742263175106[411] = 0;
   out_2745763742263175106[412] = 0;
   out_2745763742263175106[413] = 0;
   out_2745763742263175106[414] = 0;
   out_2745763742263175106[415] = 0;
   out_2745763742263175106[416] = 0;
   out_2745763742263175106[417] = 0;
   out_2745763742263175106[418] = 1;
   out_2745763742263175106[419] = 0;
   out_2745763742263175106[420] = 0;
   out_2745763742263175106[421] = 0;
   out_2745763742263175106[422] = 0;
   out_2745763742263175106[423] = 0;
   out_2745763742263175106[424] = 0;
   out_2745763742263175106[425] = 0;
   out_2745763742263175106[426] = 0;
   out_2745763742263175106[427] = 0;
   out_2745763742263175106[428] = 0;
   out_2745763742263175106[429] = 0;
   out_2745763742263175106[430] = 0;
   out_2745763742263175106[431] = 0;
   out_2745763742263175106[432] = 0;
   out_2745763742263175106[433] = 0;
   out_2745763742263175106[434] = 0;
   out_2745763742263175106[435] = 0;
   out_2745763742263175106[436] = 0;
   out_2745763742263175106[437] = 0;
   out_2745763742263175106[438] = 0;
   out_2745763742263175106[439] = 0;
   out_2745763742263175106[440] = 1;
}
void h_4(double *state, double *unused, double *out_8974275436426955909) {
   out_8974275436426955909[0] = state[10] + state[13];
   out_8974275436426955909[1] = state[11] + state[14];
   out_8974275436426955909[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_3251180476872113937) {
   out_3251180476872113937[0] = 0;
   out_3251180476872113937[1] = 0;
   out_3251180476872113937[2] = 0;
   out_3251180476872113937[3] = 0;
   out_3251180476872113937[4] = 0;
   out_3251180476872113937[5] = 0;
   out_3251180476872113937[6] = 0;
   out_3251180476872113937[7] = 0;
   out_3251180476872113937[8] = 0;
   out_3251180476872113937[9] = 0;
   out_3251180476872113937[10] = 1;
   out_3251180476872113937[11] = 0;
   out_3251180476872113937[12] = 0;
   out_3251180476872113937[13] = 1;
   out_3251180476872113937[14] = 0;
   out_3251180476872113937[15] = 0;
   out_3251180476872113937[16] = 0;
   out_3251180476872113937[17] = 0;
   out_3251180476872113937[18] = 0;
   out_3251180476872113937[19] = 0;
   out_3251180476872113937[20] = 0;
   out_3251180476872113937[21] = 0;
   out_3251180476872113937[22] = 0;
   out_3251180476872113937[23] = 0;
   out_3251180476872113937[24] = 0;
   out_3251180476872113937[25] = 0;
   out_3251180476872113937[26] = 0;
   out_3251180476872113937[27] = 0;
   out_3251180476872113937[28] = 0;
   out_3251180476872113937[29] = 0;
   out_3251180476872113937[30] = 0;
   out_3251180476872113937[31] = 0;
   out_3251180476872113937[32] = 0;
   out_3251180476872113937[33] = 1;
   out_3251180476872113937[34] = 0;
   out_3251180476872113937[35] = 0;
   out_3251180476872113937[36] = 1;
   out_3251180476872113937[37] = 0;
   out_3251180476872113937[38] = 0;
   out_3251180476872113937[39] = 0;
   out_3251180476872113937[40] = 0;
   out_3251180476872113937[41] = 0;
   out_3251180476872113937[42] = 0;
   out_3251180476872113937[43] = 0;
   out_3251180476872113937[44] = 0;
   out_3251180476872113937[45] = 0;
   out_3251180476872113937[46] = 0;
   out_3251180476872113937[47] = 0;
   out_3251180476872113937[48] = 0;
   out_3251180476872113937[49] = 0;
   out_3251180476872113937[50] = 0;
   out_3251180476872113937[51] = 0;
   out_3251180476872113937[52] = 0;
   out_3251180476872113937[53] = 0;
   out_3251180476872113937[54] = 0;
   out_3251180476872113937[55] = 0;
   out_3251180476872113937[56] = 1;
   out_3251180476872113937[57] = 0;
   out_3251180476872113937[58] = 0;
   out_3251180476872113937[59] = 1;
   out_3251180476872113937[60] = 0;
   out_3251180476872113937[61] = 0;
   out_3251180476872113937[62] = 0;
   out_3251180476872113937[63] = 0;
   out_3251180476872113937[64] = 0;
   out_3251180476872113937[65] = 0;
}
void h_9(double *state, double *unused, double *out_4146100310906222837) {
   out_4146100310906222837[0] = state[10];
   out_4146100310906222837[1] = state[11];
   out_4146100310906222837[2] = state[12];
}
void H_9(double *state, double *unused, double *out_4036038458392333533) {
   out_4036038458392333533[0] = 0;
   out_4036038458392333533[1] = 0;
   out_4036038458392333533[2] = 0;
   out_4036038458392333533[3] = 0;
   out_4036038458392333533[4] = 0;
   out_4036038458392333533[5] = 0;
   out_4036038458392333533[6] = 0;
   out_4036038458392333533[7] = 0;
   out_4036038458392333533[8] = 0;
   out_4036038458392333533[9] = 0;
   out_4036038458392333533[10] = 1;
   out_4036038458392333533[11] = 0;
   out_4036038458392333533[12] = 0;
   out_4036038458392333533[13] = 0;
   out_4036038458392333533[14] = 0;
   out_4036038458392333533[15] = 0;
   out_4036038458392333533[16] = 0;
   out_4036038458392333533[17] = 0;
   out_4036038458392333533[18] = 0;
   out_4036038458392333533[19] = 0;
   out_4036038458392333533[20] = 0;
   out_4036038458392333533[21] = 0;
   out_4036038458392333533[22] = 0;
   out_4036038458392333533[23] = 0;
   out_4036038458392333533[24] = 0;
   out_4036038458392333533[25] = 0;
   out_4036038458392333533[26] = 0;
   out_4036038458392333533[27] = 0;
   out_4036038458392333533[28] = 0;
   out_4036038458392333533[29] = 0;
   out_4036038458392333533[30] = 0;
   out_4036038458392333533[31] = 0;
   out_4036038458392333533[32] = 0;
   out_4036038458392333533[33] = 1;
   out_4036038458392333533[34] = 0;
   out_4036038458392333533[35] = 0;
   out_4036038458392333533[36] = 0;
   out_4036038458392333533[37] = 0;
   out_4036038458392333533[38] = 0;
   out_4036038458392333533[39] = 0;
   out_4036038458392333533[40] = 0;
   out_4036038458392333533[41] = 0;
   out_4036038458392333533[42] = 0;
   out_4036038458392333533[43] = 0;
   out_4036038458392333533[44] = 0;
   out_4036038458392333533[45] = 0;
   out_4036038458392333533[46] = 0;
   out_4036038458392333533[47] = 0;
   out_4036038458392333533[48] = 0;
   out_4036038458392333533[49] = 0;
   out_4036038458392333533[50] = 0;
   out_4036038458392333533[51] = 0;
   out_4036038458392333533[52] = 0;
   out_4036038458392333533[53] = 0;
   out_4036038458392333533[54] = 0;
   out_4036038458392333533[55] = 0;
   out_4036038458392333533[56] = 1;
   out_4036038458392333533[57] = 0;
   out_4036038458392333533[58] = 0;
   out_4036038458392333533[59] = 0;
   out_4036038458392333533[60] = 0;
   out_4036038458392333533[61] = 0;
   out_4036038458392333533[62] = 0;
   out_4036038458392333533[63] = 0;
   out_4036038458392333533[64] = 0;
   out_4036038458392333533[65] = 0;
}
void h_10(double *state, double *unused, double *out_112020028582643827) {
   out_112020028582643827[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_112020028582643827[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_112020028582643827[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_1724120192745202477) {
   out_1724120192745202477[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1724120192745202477[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1724120192745202477[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_1724120192745202477[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1724120192745202477[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1724120192745202477[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1724120192745202477[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1724120192745202477[7] = 0;
   out_1724120192745202477[8] = 0;
   out_1724120192745202477[9] = 0;
   out_1724120192745202477[10] = 0;
   out_1724120192745202477[11] = 0;
   out_1724120192745202477[12] = 0;
   out_1724120192745202477[13] = 0;
   out_1724120192745202477[14] = 0;
   out_1724120192745202477[15] = 0;
   out_1724120192745202477[16] = 1;
   out_1724120192745202477[17] = 0;
   out_1724120192745202477[18] = 0;
   out_1724120192745202477[19] = 1;
   out_1724120192745202477[20] = 0;
   out_1724120192745202477[21] = 0;
   out_1724120192745202477[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1724120192745202477[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1724120192745202477[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_1724120192745202477[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1724120192745202477[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1724120192745202477[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1724120192745202477[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1724120192745202477[29] = 0;
   out_1724120192745202477[30] = 0;
   out_1724120192745202477[31] = 0;
   out_1724120192745202477[32] = 0;
   out_1724120192745202477[33] = 0;
   out_1724120192745202477[34] = 0;
   out_1724120192745202477[35] = 0;
   out_1724120192745202477[36] = 0;
   out_1724120192745202477[37] = 0;
   out_1724120192745202477[38] = 0;
   out_1724120192745202477[39] = 1;
   out_1724120192745202477[40] = 0;
   out_1724120192745202477[41] = 0;
   out_1724120192745202477[42] = 1;
   out_1724120192745202477[43] = 0;
   out_1724120192745202477[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_1724120192745202477[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_1724120192745202477[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1724120192745202477[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1724120192745202477[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1724120192745202477[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1724120192745202477[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1724120192745202477[51] = 0;
   out_1724120192745202477[52] = 0;
   out_1724120192745202477[53] = 0;
   out_1724120192745202477[54] = 0;
   out_1724120192745202477[55] = 0;
   out_1724120192745202477[56] = 0;
   out_1724120192745202477[57] = 0;
   out_1724120192745202477[58] = 0;
   out_1724120192745202477[59] = 0;
   out_1724120192745202477[60] = 0;
   out_1724120192745202477[61] = 0;
   out_1724120192745202477[62] = 1;
   out_1724120192745202477[63] = 0;
   out_1724120192745202477[64] = 0;
   out_1724120192745202477[65] = 1;
}
void h_12(double *state, double *unused, double *out_2427243725057012526) {
   out_2427243725057012526[0] = state[0];
   out_2427243725057012526[1] = state[1];
   out_2427243725057012526[2] = state[2];
}
void H_12(double *state, double *unused, double *out_8814305219794704683) {
   out_8814305219794704683[0] = 1;
   out_8814305219794704683[1] = 0;
   out_8814305219794704683[2] = 0;
   out_8814305219794704683[3] = 0;
   out_8814305219794704683[4] = 0;
   out_8814305219794704683[5] = 0;
   out_8814305219794704683[6] = 0;
   out_8814305219794704683[7] = 0;
   out_8814305219794704683[8] = 0;
   out_8814305219794704683[9] = 0;
   out_8814305219794704683[10] = 0;
   out_8814305219794704683[11] = 0;
   out_8814305219794704683[12] = 0;
   out_8814305219794704683[13] = 0;
   out_8814305219794704683[14] = 0;
   out_8814305219794704683[15] = 0;
   out_8814305219794704683[16] = 0;
   out_8814305219794704683[17] = 0;
   out_8814305219794704683[18] = 0;
   out_8814305219794704683[19] = 0;
   out_8814305219794704683[20] = 0;
   out_8814305219794704683[21] = 0;
   out_8814305219794704683[22] = 0;
   out_8814305219794704683[23] = 1;
   out_8814305219794704683[24] = 0;
   out_8814305219794704683[25] = 0;
   out_8814305219794704683[26] = 0;
   out_8814305219794704683[27] = 0;
   out_8814305219794704683[28] = 0;
   out_8814305219794704683[29] = 0;
   out_8814305219794704683[30] = 0;
   out_8814305219794704683[31] = 0;
   out_8814305219794704683[32] = 0;
   out_8814305219794704683[33] = 0;
   out_8814305219794704683[34] = 0;
   out_8814305219794704683[35] = 0;
   out_8814305219794704683[36] = 0;
   out_8814305219794704683[37] = 0;
   out_8814305219794704683[38] = 0;
   out_8814305219794704683[39] = 0;
   out_8814305219794704683[40] = 0;
   out_8814305219794704683[41] = 0;
   out_8814305219794704683[42] = 0;
   out_8814305219794704683[43] = 0;
   out_8814305219794704683[44] = 0;
   out_8814305219794704683[45] = 0;
   out_8814305219794704683[46] = 1;
   out_8814305219794704683[47] = 0;
   out_8814305219794704683[48] = 0;
   out_8814305219794704683[49] = 0;
   out_8814305219794704683[50] = 0;
   out_8814305219794704683[51] = 0;
   out_8814305219794704683[52] = 0;
   out_8814305219794704683[53] = 0;
   out_8814305219794704683[54] = 0;
   out_8814305219794704683[55] = 0;
   out_8814305219794704683[56] = 0;
   out_8814305219794704683[57] = 0;
   out_8814305219794704683[58] = 0;
   out_8814305219794704683[59] = 0;
   out_8814305219794704683[60] = 0;
   out_8814305219794704683[61] = 0;
   out_8814305219794704683[62] = 0;
   out_8814305219794704683[63] = 0;
   out_8814305219794704683[64] = 0;
   out_8814305219794704683[65] = 0;
}
void h_35(double *state, double *unused, double *out_3374267511616249904) {
   out_3374267511616249904[0] = state[7];
   out_3374267511616249904[1] = state[8];
   out_3374267511616249904[2] = state[9];
}
void H_35(double *state, double *unused, double *out_115481580500493439) {
   out_115481580500493439[0] = 0;
   out_115481580500493439[1] = 0;
   out_115481580500493439[2] = 0;
   out_115481580500493439[3] = 0;
   out_115481580500493439[4] = 0;
   out_115481580500493439[5] = 0;
   out_115481580500493439[6] = 0;
   out_115481580500493439[7] = 1;
   out_115481580500493439[8] = 0;
   out_115481580500493439[9] = 0;
   out_115481580500493439[10] = 0;
   out_115481580500493439[11] = 0;
   out_115481580500493439[12] = 0;
   out_115481580500493439[13] = 0;
   out_115481580500493439[14] = 0;
   out_115481580500493439[15] = 0;
   out_115481580500493439[16] = 0;
   out_115481580500493439[17] = 0;
   out_115481580500493439[18] = 0;
   out_115481580500493439[19] = 0;
   out_115481580500493439[20] = 0;
   out_115481580500493439[21] = 0;
   out_115481580500493439[22] = 0;
   out_115481580500493439[23] = 0;
   out_115481580500493439[24] = 0;
   out_115481580500493439[25] = 0;
   out_115481580500493439[26] = 0;
   out_115481580500493439[27] = 0;
   out_115481580500493439[28] = 0;
   out_115481580500493439[29] = 0;
   out_115481580500493439[30] = 1;
   out_115481580500493439[31] = 0;
   out_115481580500493439[32] = 0;
   out_115481580500493439[33] = 0;
   out_115481580500493439[34] = 0;
   out_115481580500493439[35] = 0;
   out_115481580500493439[36] = 0;
   out_115481580500493439[37] = 0;
   out_115481580500493439[38] = 0;
   out_115481580500493439[39] = 0;
   out_115481580500493439[40] = 0;
   out_115481580500493439[41] = 0;
   out_115481580500493439[42] = 0;
   out_115481580500493439[43] = 0;
   out_115481580500493439[44] = 0;
   out_115481580500493439[45] = 0;
   out_115481580500493439[46] = 0;
   out_115481580500493439[47] = 0;
   out_115481580500493439[48] = 0;
   out_115481580500493439[49] = 0;
   out_115481580500493439[50] = 0;
   out_115481580500493439[51] = 0;
   out_115481580500493439[52] = 0;
   out_115481580500493439[53] = 1;
   out_115481580500493439[54] = 0;
   out_115481580500493439[55] = 0;
   out_115481580500493439[56] = 0;
   out_115481580500493439[57] = 0;
   out_115481580500493439[58] = 0;
   out_115481580500493439[59] = 0;
   out_115481580500493439[60] = 0;
   out_115481580500493439[61] = 0;
   out_115481580500493439[62] = 0;
   out_115481580500493439[63] = 0;
   out_115481580500493439[64] = 0;
   out_115481580500493439[65] = 0;
}
void h_32(double *state, double *unused, double *out_5546416164689322160) {
   out_5546416164689322160[0] = state[3];
   out_5546416164689322160[1] = state[4];
   out_5546416164689322160[2] = state[5];
   out_5546416164689322160[3] = state[6];
}
void H_32(double *state, double *unused, double *out_3339031481602674495) {
   out_3339031481602674495[0] = 0;
   out_3339031481602674495[1] = 0;
   out_3339031481602674495[2] = 0;
   out_3339031481602674495[3] = 1;
   out_3339031481602674495[4] = 0;
   out_3339031481602674495[5] = 0;
   out_3339031481602674495[6] = 0;
   out_3339031481602674495[7] = 0;
   out_3339031481602674495[8] = 0;
   out_3339031481602674495[9] = 0;
   out_3339031481602674495[10] = 0;
   out_3339031481602674495[11] = 0;
   out_3339031481602674495[12] = 0;
   out_3339031481602674495[13] = 0;
   out_3339031481602674495[14] = 0;
   out_3339031481602674495[15] = 0;
   out_3339031481602674495[16] = 0;
   out_3339031481602674495[17] = 0;
   out_3339031481602674495[18] = 0;
   out_3339031481602674495[19] = 0;
   out_3339031481602674495[20] = 0;
   out_3339031481602674495[21] = 0;
   out_3339031481602674495[22] = 0;
   out_3339031481602674495[23] = 0;
   out_3339031481602674495[24] = 0;
   out_3339031481602674495[25] = 0;
   out_3339031481602674495[26] = 1;
   out_3339031481602674495[27] = 0;
   out_3339031481602674495[28] = 0;
   out_3339031481602674495[29] = 0;
   out_3339031481602674495[30] = 0;
   out_3339031481602674495[31] = 0;
   out_3339031481602674495[32] = 0;
   out_3339031481602674495[33] = 0;
   out_3339031481602674495[34] = 0;
   out_3339031481602674495[35] = 0;
   out_3339031481602674495[36] = 0;
   out_3339031481602674495[37] = 0;
   out_3339031481602674495[38] = 0;
   out_3339031481602674495[39] = 0;
   out_3339031481602674495[40] = 0;
   out_3339031481602674495[41] = 0;
   out_3339031481602674495[42] = 0;
   out_3339031481602674495[43] = 0;
   out_3339031481602674495[44] = 0;
   out_3339031481602674495[45] = 0;
   out_3339031481602674495[46] = 0;
   out_3339031481602674495[47] = 0;
   out_3339031481602674495[48] = 0;
   out_3339031481602674495[49] = 1;
   out_3339031481602674495[50] = 0;
   out_3339031481602674495[51] = 0;
   out_3339031481602674495[52] = 0;
   out_3339031481602674495[53] = 0;
   out_3339031481602674495[54] = 0;
   out_3339031481602674495[55] = 0;
   out_3339031481602674495[56] = 0;
   out_3339031481602674495[57] = 0;
   out_3339031481602674495[58] = 0;
   out_3339031481602674495[59] = 0;
   out_3339031481602674495[60] = 0;
   out_3339031481602674495[61] = 0;
   out_3339031481602674495[62] = 0;
   out_3339031481602674495[63] = 0;
   out_3339031481602674495[64] = 0;
   out_3339031481602674495[65] = 0;
   out_3339031481602674495[66] = 0;
   out_3339031481602674495[67] = 0;
   out_3339031481602674495[68] = 0;
   out_3339031481602674495[69] = 0;
   out_3339031481602674495[70] = 0;
   out_3339031481602674495[71] = 0;
   out_3339031481602674495[72] = 1;
   out_3339031481602674495[73] = 0;
   out_3339031481602674495[74] = 0;
   out_3339031481602674495[75] = 0;
   out_3339031481602674495[76] = 0;
   out_3339031481602674495[77] = 0;
   out_3339031481602674495[78] = 0;
   out_3339031481602674495[79] = 0;
   out_3339031481602674495[80] = 0;
   out_3339031481602674495[81] = 0;
   out_3339031481602674495[82] = 0;
   out_3339031481602674495[83] = 0;
   out_3339031481602674495[84] = 0;
   out_3339031481602674495[85] = 0;
   out_3339031481602674495[86] = 0;
   out_3339031481602674495[87] = 0;
}
void h_13(double *state, double *unused, double *out_1839926880760156660) {
   out_1839926880760156660[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_1839926880760156660[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_1839926880760156660[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_9164343041642234366) {
   out_9164343041642234366[0] = 0;
   out_9164343041642234366[1] = 0;
   out_9164343041642234366[2] = 0;
   out_9164343041642234366[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_9164343041642234366[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_9164343041642234366[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_9164343041642234366[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_9164343041642234366[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_9164343041642234366[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_9164343041642234366[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_9164343041642234366[10] = 0;
   out_9164343041642234366[11] = 0;
   out_9164343041642234366[12] = 0;
   out_9164343041642234366[13] = 0;
   out_9164343041642234366[14] = 0;
   out_9164343041642234366[15] = 0;
   out_9164343041642234366[16] = 0;
   out_9164343041642234366[17] = 0;
   out_9164343041642234366[18] = 0;
   out_9164343041642234366[19] = 0;
   out_9164343041642234366[20] = 0;
   out_9164343041642234366[21] = 0;
   out_9164343041642234366[22] = 0;
   out_9164343041642234366[23] = 0;
   out_9164343041642234366[24] = 0;
   out_9164343041642234366[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_9164343041642234366[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_9164343041642234366[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_9164343041642234366[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_9164343041642234366[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_9164343041642234366[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_9164343041642234366[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_9164343041642234366[32] = 0;
   out_9164343041642234366[33] = 0;
   out_9164343041642234366[34] = 0;
   out_9164343041642234366[35] = 0;
   out_9164343041642234366[36] = 0;
   out_9164343041642234366[37] = 0;
   out_9164343041642234366[38] = 0;
   out_9164343041642234366[39] = 0;
   out_9164343041642234366[40] = 0;
   out_9164343041642234366[41] = 0;
   out_9164343041642234366[42] = 0;
   out_9164343041642234366[43] = 0;
   out_9164343041642234366[44] = 0;
   out_9164343041642234366[45] = 0;
   out_9164343041642234366[46] = 0;
   out_9164343041642234366[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_9164343041642234366[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_9164343041642234366[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_9164343041642234366[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_9164343041642234366[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_9164343041642234366[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_9164343041642234366[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_9164343041642234366[54] = 0;
   out_9164343041642234366[55] = 0;
   out_9164343041642234366[56] = 0;
   out_9164343041642234366[57] = 0;
   out_9164343041642234366[58] = 0;
   out_9164343041642234366[59] = 0;
   out_9164343041642234366[60] = 0;
   out_9164343041642234366[61] = 0;
   out_9164343041642234366[62] = 0;
   out_9164343041642234366[63] = 0;
   out_9164343041642234366[64] = 0;
   out_9164343041642234366[65] = 0;
}
void h_14(double *state, double *unused, double *out_4146100310906222837) {
   out_4146100310906222837[0] = state[10];
   out_4146100310906222837[1] = state[11];
   out_4146100310906222837[2] = state[12];
}
void H_14(double *state, double *unused, double *out_4036038458392333533) {
   out_4036038458392333533[0] = 0;
   out_4036038458392333533[1] = 0;
   out_4036038458392333533[2] = 0;
   out_4036038458392333533[3] = 0;
   out_4036038458392333533[4] = 0;
   out_4036038458392333533[5] = 0;
   out_4036038458392333533[6] = 0;
   out_4036038458392333533[7] = 0;
   out_4036038458392333533[8] = 0;
   out_4036038458392333533[9] = 0;
   out_4036038458392333533[10] = 1;
   out_4036038458392333533[11] = 0;
   out_4036038458392333533[12] = 0;
   out_4036038458392333533[13] = 0;
   out_4036038458392333533[14] = 0;
   out_4036038458392333533[15] = 0;
   out_4036038458392333533[16] = 0;
   out_4036038458392333533[17] = 0;
   out_4036038458392333533[18] = 0;
   out_4036038458392333533[19] = 0;
   out_4036038458392333533[20] = 0;
   out_4036038458392333533[21] = 0;
   out_4036038458392333533[22] = 0;
   out_4036038458392333533[23] = 0;
   out_4036038458392333533[24] = 0;
   out_4036038458392333533[25] = 0;
   out_4036038458392333533[26] = 0;
   out_4036038458392333533[27] = 0;
   out_4036038458392333533[28] = 0;
   out_4036038458392333533[29] = 0;
   out_4036038458392333533[30] = 0;
   out_4036038458392333533[31] = 0;
   out_4036038458392333533[32] = 0;
   out_4036038458392333533[33] = 1;
   out_4036038458392333533[34] = 0;
   out_4036038458392333533[35] = 0;
   out_4036038458392333533[36] = 0;
   out_4036038458392333533[37] = 0;
   out_4036038458392333533[38] = 0;
   out_4036038458392333533[39] = 0;
   out_4036038458392333533[40] = 0;
   out_4036038458392333533[41] = 0;
   out_4036038458392333533[42] = 0;
   out_4036038458392333533[43] = 0;
   out_4036038458392333533[44] = 0;
   out_4036038458392333533[45] = 0;
   out_4036038458392333533[46] = 0;
   out_4036038458392333533[47] = 0;
   out_4036038458392333533[48] = 0;
   out_4036038458392333533[49] = 0;
   out_4036038458392333533[50] = 0;
   out_4036038458392333533[51] = 0;
   out_4036038458392333533[52] = 0;
   out_4036038458392333533[53] = 0;
   out_4036038458392333533[54] = 0;
   out_4036038458392333533[55] = 0;
   out_4036038458392333533[56] = 1;
   out_4036038458392333533[57] = 0;
   out_4036038458392333533[58] = 0;
   out_4036038458392333533[59] = 0;
   out_4036038458392333533[60] = 0;
   out_4036038458392333533[61] = 0;
   out_4036038458392333533[62] = 0;
   out_4036038458392333533[63] = 0;
   out_4036038458392333533[64] = 0;
   out_4036038458392333533[65] = 0;
}
void h_33(double *state, double *unused, double *out_6560067115827767053) {
   out_6560067115827767053[0] = state[16];
   out_6560067115827767053[1] = state[17];
   out_6560067115827767053[2] = state[18];
}
void H_33(double *state, double *unused, double *out_3266038585139351043) {
   out_3266038585139351043[0] = 0;
   out_3266038585139351043[1] = 0;
   out_3266038585139351043[2] = 0;
   out_3266038585139351043[3] = 0;
   out_3266038585139351043[4] = 0;
   out_3266038585139351043[5] = 0;
   out_3266038585139351043[6] = 0;
   out_3266038585139351043[7] = 0;
   out_3266038585139351043[8] = 0;
   out_3266038585139351043[9] = 0;
   out_3266038585139351043[10] = 0;
   out_3266038585139351043[11] = 0;
   out_3266038585139351043[12] = 0;
   out_3266038585139351043[13] = 0;
   out_3266038585139351043[14] = 0;
   out_3266038585139351043[15] = 0;
   out_3266038585139351043[16] = 1;
   out_3266038585139351043[17] = 0;
   out_3266038585139351043[18] = 0;
   out_3266038585139351043[19] = 0;
   out_3266038585139351043[20] = 0;
   out_3266038585139351043[21] = 0;
   out_3266038585139351043[22] = 0;
   out_3266038585139351043[23] = 0;
   out_3266038585139351043[24] = 0;
   out_3266038585139351043[25] = 0;
   out_3266038585139351043[26] = 0;
   out_3266038585139351043[27] = 0;
   out_3266038585139351043[28] = 0;
   out_3266038585139351043[29] = 0;
   out_3266038585139351043[30] = 0;
   out_3266038585139351043[31] = 0;
   out_3266038585139351043[32] = 0;
   out_3266038585139351043[33] = 0;
   out_3266038585139351043[34] = 0;
   out_3266038585139351043[35] = 0;
   out_3266038585139351043[36] = 0;
   out_3266038585139351043[37] = 0;
   out_3266038585139351043[38] = 0;
   out_3266038585139351043[39] = 1;
   out_3266038585139351043[40] = 0;
   out_3266038585139351043[41] = 0;
   out_3266038585139351043[42] = 0;
   out_3266038585139351043[43] = 0;
   out_3266038585139351043[44] = 0;
   out_3266038585139351043[45] = 0;
   out_3266038585139351043[46] = 0;
   out_3266038585139351043[47] = 0;
   out_3266038585139351043[48] = 0;
   out_3266038585139351043[49] = 0;
   out_3266038585139351043[50] = 0;
   out_3266038585139351043[51] = 0;
   out_3266038585139351043[52] = 0;
   out_3266038585139351043[53] = 0;
   out_3266038585139351043[54] = 0;
   out_3266038585139351043[55] = 0;
   out_3266038585139351043[56] = 0;
   out_3266038585139351043[57] = 0;
   out_3266038585139351043[58] = 0;
   out_3266038585139351043[59] = 0;
   out_3266038585139351043[60] = 0;
   out_3266038585139351043[61] = 0;
   out_3266038585139351043[62] = 1;
   out_3266038585139351043[63] = 0;
   out_3266038585139351043[64] = 0;
   out_3266038585139351043[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_1443495834072089830) {
  H(in_vec, out_1443495834072089830);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_7269670487349612617) {
  err_fun(nom_x, delta_x, out_7269670487349612617);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_5168123923996786904) {
  inv_err_fun(nom_x, true_x, out_5168123923996786904);
}
void live_H_mod_fun(double *state, double *out_1452774069512641077) {
  H_mod_fun(state, out_1452774069512641077);
}
void live_f_fun(double *state, double dt, double *out_6830993965878836661) {
  f_fun(state,  dt, out_6830993965878836661);
}
void live_F_fun(double *state, double dt, double *out_2745763742263175106) {
  F_fun(state,  dt, out_2745763742263175106);
}
void live_h_4(double *state, double *unused, double *out_8974275436426955909) {
  h_4(state, unused, out_8974275436426955909);
}
void live_H_4(double *state, double *unused, double *out_3251180476872113937) {
  H_4(state, unused, out_3251180476872113937);
}
void live_h_9(double *state, double *unused, double *out_4146100310906222837) {
  h_9(state, unused, out_4146100310906222837);
}
void live_H_9(double *state, double *unused, double *out_4036038458392333533) {
  H_9(state, unused, out_4036038458392333533);
}
void live_h_10(double *state, double *unused, double *out_112020028582643827) {
  h_10(state, unused, out_112020028582643827);
}
void live_H_10(double *state, double *unused, double *out_1724120192745202477) {
  H_10(state, unused, out_1724120192745202477);
}
void live_h_12(double *state, double *unused, double *out_2427243725057012526) {
  h_12(state, unused, out_2427243725057012526);
}
void live_H_12(double *state, double *unused, double *out_8814305219794704683) {
  H_12(state, unused, out_8814305219794704683);
}
void live_h_35(double *state, double *unused, double *out_3374267511616249904) {
  h_35(state, unused, out_3374267511616249904);
}
void live_H_35(double *state, double *unused, double *out_115481580500493439) {
  H_35(state, unused, out_115481580500493439);
}
void live_h_32(double *state, double *unused, double *out_5546416164689322160) {
  h_32(state, unused, out_5546416164689322160);
}
void live_H_32(double *state, double *unused, double *out_3339031481602674495) {
  H_32(state, unused, out_3339031481602674495);
}
void live_h_13(double *state, double *unused, double *out_1839926880760156660) {
  h_13(state, unused, out_1839926880760156660);
}
void live_H_13(double *state, double *unused, double *out_9164343041642234366) {
  H_13(state, unused, out_9164343041642234366);
}
void live_h_14(double *state, double *unused, double *out_4146100310906222837) {
  h_14(state, unused, out_4146100310906222837);
}
void live_H_14(double *state, double *unused, double *out_4036038458392333533) {
  H_14(state, unused, out_4036038458392333533);
}
void live_h_33(double *state, double *unused, double *out_6560067115827767053) {
  h_33(state, unused, out_6560067115827767053);
}
void live_H_33(double *state, double *unused, double *out_3266038585139351043) {
  H_33(state, unused, out_3266038585139351043);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
